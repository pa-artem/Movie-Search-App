{"version":3,"file":"main.css","mappings":"AAAA,EACE,sBACA,SACA,UAGF,GACE,gBAGF,aAEE,YCVF,MCIQ,6IDCF,yLAKF,+ECJI,2BDNR,MCOU,0BADF,2BDNR,MCOU,sBADF,2BDNR,MCOU,yBADF,2BDNR,MCOU,wBADF,2BDNR,MCOU,yBADF,2BDNR,MCOU,wBDOV,KACE,mEACA,0CACA,+BAGF,EACE,eAGF,GACE,iDACA,kBAGF,GACE,8BACA,SACA,gBElCF,iBACE,kBACA,UACA,WACA,YACA,mBCHF,WACE,gBCIoB,CDHpB,cACA,eEHF,eACE,aACA,4EAGF,qBACE,aACA,2DACA,wEAEA,2BALF,qBAMI,4DCXJ,YACE,YACA,mDACA,sCACA,sBACA,4BACA,2BACA,8CAEA,qBACE,aACA,YACA,+EACE,CAGF,wEACA,+BACA,yCACA,oBACA,mDACA,UACA,gBACA,kNACE,CAUF,sBAEA,6BACE,iBACA,WACA,YACA,qDAEA,2BANF,6BAQI,WACA,YACA,kBACA,sCAIJ,2BACE,eACA,aACA,sBACA,4EACA,+BAEA,kCACE,oBAGF,8CACE,aACA,eACA,mBACA,4EAEA,sDACE,oFACA,gEACA,qDAGF,qDACE,oFACA,qDACA,6CACA,gEAIJ,qCACE,gBAIJ,+BACE,mBAGF,6BACE,iBAEA,2BAHF,6BAII,gBAIJ,2BA1FF,qBA2FI,aACA,yBACA,eACA,WACA,0CAIJ,2BA5GF,YA8GI,4BC9GJ,mBACE,aACA,4EACA,wDACE,CAIF,2BARF,mBASI,wDACE,CAEF,6CAGF,sCACE,gBACA,yBACA,iDAGF,gCACE,qBACA,iBACA,mBACA,gEACA,iDAGF,uCACE,wBACA,iBACA,gEACA,mBACA,YACA,gCACA,6CACA,8CAEA,6CACE,gEACA,eCpCJ,wBACE,kBACA,UALmB,CAKnB,8BALmB,CAQrB,yBACE,qDACA,aACA,qBACA,uBACA,8EACA,iFAGF,wBACE,kEACA,oEACA,uGACA,kBAMA,4EPbA,uCOUE,8CPVF,uCOUE,kDPVF,uCOUE,kDAKF,0BACE,GACE,iCAGF,IACE,mKAGF,KACE,kCAVJ,kBACE,GACE,iCAGF,IACE,mKAGF,KACE,kC","sources":["webpack:///./src/scss/base/_reset.scss","webpack:///./src/scss/base/_base.scss","webpack:///./src/scss/abstracts/_mixins.scss","webpack:///./src/scss/utils/_visually-hidden.scss","webpack:///./src/scss/layout/_container.scss","webpack:///./src/scss/abstracts/_breakpoints.scss","webpack:///./src/scss/pages/_front-page.scss","webpack:///./src/scss/components/_MovieCard.scss","webpack:///./src/scss/components/_MoviesSearchForm.scss","webpack:///./src/scss/components/_BouncingLoadingAnimation.scss"],"sourcesContent":["* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nul {\n  list-style: none;\n}\n\ninput,\nbutton {\n  min-width: 0;\n}\n","@use \"../abstracts\" as *;\n\n:root {\n  @include screen-width-media-queries($font-sizes, \"font-size\");\n\n  @each $color-type, $color-weights in $colors {\n    @each $color-weight, $color-value in $color-weights {\n      #{--color-#{$color-type}-#{$color-weight}}: #{$color-value};\n    }\n  }\n\n  @each $margin-weight, $margin-value in $margins {\n    #{--margin-#{$margin-weight}}: #{$margin-value};\n  }\n}\n\nbody {\n  background-color: var(--color-neutral-200);\n  color: var(--color-neutral-900);\n  font-family: Arsenal, sans-serif;\n}\n\np {\n  font-size: 1rem;\n}\n\nh1 {\n  font-size: var(--font-size-900);\n  text-align: center;\n}\n\nh2 {\n  font-family: Oswald, sans-serif;\n  margin: 0;\n  line-height: 1.2;\n}\n","@use \"./breakpoints\" as *;\n\n@mixin screen-width-media-queries($map, $value-name) {\n  @each $weight, $different-screens-values in $map {\n    @each $screen-size, $value in $different-screens-values {\n      @if $screen-size == \"small\" {\n        #{--#{$value-name}-#{$weight}}: #{$value};\n      } @else {\n        @media (min-width: breakpoint($screen-size)) {\n          #{--#{$value-name}-#{$weight}}: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin each-of-type($count) {\n  @for $i from 1 through $count {\n    &:nth-of-type(#{$i}) {\n      @content ($i);\n    }\n  }\n}\n\n@mixin visually-hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  clip: rect(0 0 0 0);\n}\n",".visually-hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  clip: rect(0 0 0 0);\n}\n","@use \"../abstracts\" as *;\n\n.container {\n  max-width: $container-max-width;\n  margin: 0 auto;\n  padding: 0 1rem;\n}\n","$breakpoints: (\n  // actually that's not a breakpoint, but rather the minimum screen width at\n  // which the page is expected to behave adequately\n  \"small\": 20rem,\n  \"medium\": 52.5rem,\n  \"large\": 68.75rem\n);\n$container-max-width: 100rem;\n\n@function breakpoint($size) {\n  @return map-get($breakpoints, $size);\n}\n","@use \"../abstracts\" as *;\n\n.search-movies {\n  display: grid;\n  gap: var(--margin-700);\n}\n\n.queried-movies-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n  gap: var(--margin-400);\n\n  @media (min-width: breakpoint(\"medium\")) {\n    grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));\n  }\n}\n","@use \"../abstracts\" as *;\n\n.movie-card {\n  height: 100%;\n  border-radius: var(--margin-400);\n  box-shadow: 0 5px 10px rgba(0 0 0 / 15%);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  font-size: var(--font-size-500);\n\n  .content {\n    display: grid;\n    height: 100%;\n    grid-template-areas:\n      \"poster   meta    \"\n      \"rating   meta    \"\n      \"overview overview\";\n    gap: var(--margin-400);\n    grid-template-columns: 8rem 1fr;\n    padding: var(--margin-700);\n    padding-right: 10rem;\n    border-radius: var(--margin-400);\n    width: 75%;\n    background: rgb(255 255 255);\n    background:\n      linear-gradient(\n        90deg,\n        rgba(255 255 255 / 100%) 0%,\n        rgba(255 255 255 / 100%) 80%,\n        rgba(255 255 255 / 40%) 90%,\n        rgba(255 255 255 / 25%) 92.5%,\n        rgba(255 255 255 / 15%) 95%,\n        rgba(255 255 255 / 5%) 97.5%,\n        rgba(255 255 255 / 0%) 100%\n      );\n    transform: scale(1.01);\n\n    .poster {\n      grid-area: poster;\n      width: 100%;\n      height: auto;\n      border-radius: var(--margin-200);\n\n      @media (max-width: breakpoint(\"medium\")) {\n        // @include visually-hidden;\n        width: 6rem;\n        height: 6rem;\n        border-radius: 50%;\n        object-fit: cover;\n      }\n    }\n\n    .meta {\n      grid-area: meta;\n      display: flex;\n      flex-direction: column;\n      gap: var(--margin-200);\n      color: var(--color-primary-700);\n\n      .title {\n        padding-bottom: 0.5em;\n      }\n\n      .other-information {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: var(--margin-200);\n\n        .length {\n          padding: var(--margin-100) calc(2 * var(--margin-100));\n          border: 1px solid var(--color-neutral-700);\n          border-radius: var(--margin-200);\n        }\n\n        .genre {\n          padding: var(--margin-100) calc(2 * var(--margin-100));\n          border-radius: var(--margin-200);\n          color: var(--color-neutral-200);\n          background-color: var(--color-neutral-700);\n        }\n      }\n\n      .director {\n        font-weight: 700;\n      }\n    }\n\n    .overview {\n      grid-area: overview;\n    }\n\n    .rating {\n      grid-area: rating;\n\n      @media (max-width: breakpoint(\"medium\")) {\n        max-width: 8rem;\n      }\n    }\n\n    @media (max-width: breakpoint(\"medium\")) {\n      display: flex;\n      align-content: flex-start;\n      flex-wrap: wrap;\n      width: 100%;\n      padding: var(--margin-700);\n    }\n  }\n\n  @media (max-width: breakpoint(\"medium\")) {\n    // override react inline styles\n    background: none !important;\n  }\n}\n","@use \"../abstracts\" as *;\n\n.movie-search-form {\n  display: grid;\n  gap: var(--margin-200);\n  grid-template-areas:\n    \"label\"\n    \"search-bar\"\n    \"submit-button\";\n\n  @media (min-width: breakpoint(\"medium\")) {\n    grid-template-areas:\n      \"label .\"\n      \"search-bar submit-button\";\n    grid-template-columns: 1fr minmax(8em, auto);\n  }\n\n  .title-input-label {\n    grid-area: label;\n    text-transform: uppercase;\n    font-size: var(--font-size-200);\n  }\n\n  .title-input {\n    grid-area: search-bar;\n    padding: 0.5em 1em;\n    border-radius: 0.5em;\n    border: 2px solid var(--color-neutral-300);\n    font-size: var(--font-size-700);\n  }\n\n  button[type=\"submit\"] {\n    grid-area: submit-button;\n    padding: 0.5em 1em;\n    background-color: var(--color-neutral-900);\n    border-radius: 0.5em;\n    border: none;\n    transition: background-color 0.2s;\n    color: var(--color-neutral-200);\n    font-size: var(--font-size-500);\n\n    &:hover {\n      background-color: var(--color-neutral-700);\n      cursor: pointer;\n    }\n  }\n}\n","@use \"../abstracts\" as *;\n\n.bouncing-loading {\n  $default-ball-size: var(--margin-200);\n  $default-ball-color: var(--color-neutral-900);\n  $default-bounce-height: calc(3 * $default-ball-size);\n\n  .text {\n    text-align: center;\n    color: $default-ball-color;\n  }\n\n  .balls {\n    margin-bottom: var(--margin-200);\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    gap: var(--margin-100);\n    height: var(--bounce-height, $default-bounce-height);\n  }\n\n  .ball {\n    width: var(--ball-size, $default-ball-size);\n    height: var(--ball-size, $default-ball-size);\n    background-color: var(--ball-color, $default-ball-color);\n    border-radius: 50%;\n\n    @include each-of-type(3) using ($i) {\n      animation-delay: #{0.2 * ($i - 1)}s;\n    }\n\n    animation: bounce 1s ease infinite;\n\n    @keyframes bounce {\n      0% {\n        transform: scale(1) translateY(0);\n      }\n\n      50% {\n        transform: scale(0.6) translateY(calc(-1 * var(--loading-bounce-height, $default-bounce-height)));\n      }\n\n      100% {\n        transform: scale(1) translateY(0);\n      }\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}